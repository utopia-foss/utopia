# Base plot configuration pool for this model
#
# The configurations given here can be used in the <model_name>_plots.yml file.
---
.variables:
  base_path: &base_path data/ContDisease

  colors: &cmap                             # state value
    # NOTE Order is very important here!
    empty: &color_empty darkkhaki           # 0
    tree: &color_tree forestgreen           # 1
    infected: &color_infected firebrick     # 2
    source: &color_source orange            # 3
    stone: &color_stone slategray           # 4

  cycler: &cycler !format
    fstr: "cycler('color', ['{cmap[empty]:}', '{cmap[tree]:}', '{cmap[infected]:}', '{cmap[source]:}', '{cmap[stone]:}'])"
    cmap:
      <<: *cmap




# =============================================================================
#  ╔╦╗╔═╗╔╦╗╔═╗╦  ╔═╗╔╦╗╔═╗╔═╗
#   ║ ║╣ ║║║╠═╝║  ╠═╣ ║ ║╣ ╚═╗
#   ╩ ╚═╝╩ ╩╩  ╩═╝╩ ╩ ╩ ╚═╝╚═╝
# =============================================================================
# -- Overloads ----------------------------------------------------------------
# Overload some configs to insert model-specific settings

# Model-specific defaults
.defaults:
  based_on: .defaults

  # Can define something here ...


# .. Creators .................................................................
.creator.universe:
  based_on:
    - .creator.universe
    - .defaults

  dag_options:
    select_path_prefix: *base_path

.creator.multiverse:
  based_on:
    - .creator.multiverse
    - .defaults

  select_and_combine:
    base_path: *base_path






# =============================================================================
#  ╔═╗╦  ╔═╗╔╦╗╔═╗
#  ╠═╝║  ║ ║ ║ ╚═╗
#  ╩  ╩═╝╚═╝ ╩ ╚═╝
# =============================================================================
# -- Any kind of phase plot ---------------------------------------------------
phase_diagram:
  based_on:
    - .creator.universe
    - .plot.facet_grid.scatter

  select:
    kind:
      path: densities

  transform:
    - .sel: [ !dag_tag kind, { kind: tree } ]
      kwargs: { drop: true }
      tag: tree
    - .sel: [ !dag_tag kind, { kind: infected } ]
      kwargs: { drop: true }
      tag: infected
    - xr.Dataset:
        data_vars:
          tree: !dag_tag tree
          infected: !dag_tag infected
      tag: data


# -- Densities plot -----------------------------------------------------------
densities.base:
  based_on:
    - .plot.facet_grid.line
    - .hlpr.kind.time_series

  x: time
  hue: kind

  style:
    axes.prop_cycle: *cycler

  helpers:
    set_limits:
      y: [0., 1.]
    set_labels:
      y: Density [1/A]
      only_label_outer: true
    set_suptitle:
      title: Densities
    set_legend:
      loc: best

densities.universe:
  based_on:
    - .creator.universe
    - densities.base

  select:
    data:
      path: densities
      transform:
        - .data

densities.multiverse:
  based_on:
    - .creator.multiverse
    - .skip.if_more_than_3D
    - densities.base
    - .plot.facet_grid.with_auto_encoding

  select_and_combine:
    fields:
      data:
        path: densities
        transform:
          - .data


# --- Grid Snapshots ----------------------------------------------------------
# NOTE These can also be used as basis for grid animations.
# ... The forest ..............................................................
ca/forest:
  based_on:
    - .creator.universe
    - .plot.ca

  select:
    kind: kind
  
  to_plot:
    kind:
      title: Forest State
      cmap: *cmap

# ... The forest age ..........................................................
ca/forest_age:
  based_on:
    - .creator.universe
    - .plot.ca

  select:
    age: age

  to_plot:
    age:
      title: Forest Age
      cmap: YlGn
      vmin: 0
      vmax: max

# ... The clusters ............................................................
ca/clusters:
  based_on:
    - .creator.universe
    - .plot.ca

  select:
    cluster_id:
      path: cluster_id
      transform:
        - where: [!dag_prev , "!=", 0]  # not part of the cluster
        - np.fmod: [!dag_prev , 20]     # matching the size of the tab20 cmap
        # NOTE Important to use np.fmod here because it carries through the
        #      container attributes, which are needed for determining the
        #      grid structure. The `mod` operation itself does not do that.

  to_plot:
    cluster_id:
      title: Clusters
      cmap: tab20
      vmin: 0
      vmax: 20
      no_cbar_markings: true
