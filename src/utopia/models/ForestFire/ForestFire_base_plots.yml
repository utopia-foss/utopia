# Default base plots for the ForestFire model
---
.variables:
  base_path: &base_path  data/ForestFire





# =============================================================================
#  ╔╦╗╔═╗╔╦╗╔═╗╦  ╔═╗╔╦╗╔═╗╔═╗
#   ║ ║╣ ║║║╠═╝║  ╠═╣ ║ ║╣ ╚═╗
#   ╩ ╚═╝╩ ╩╩  ╩═╝╩ ╩ ╩ ╚═╝╚═╝
# =============================================================================
# -- Overloads ----------------------------------------------------------------
# Overload some configs to insert model-specific settings

# Model-specific defaults
.defaults:
  based_on: .defaults

  # Can define something here ...


# .. Creators .................................................................
.creator.universe:
  based_on:
    - .creator.universe
    - .defaults

  dag_options:
    select_path_prefix: *base_path

.creator.multiverse:
  based_on:
    - .creator.multiverse
    - .defaults

  select_and_combine:
    base_path: *base_path





# =============================================================================
#  ╔═╗╦  ╔═╗╔╦╗╔═╗
#  ╠═╝║  ║ ║ ║ ╚═╗
#  ╩  ╩═╝╚═╝ ╩ ╚═╝
# =============================================================================
# -- Cluster size distribution ------------------------------------------------
cluster_size_distribution:
  based_on:
    - .creator.universe
    - .plot.facet_grid.hist  # wraps xarray.plot.hist

  # Specify which data to calculate the histogram of
  select:
    cluster_size: &select_cluster_size
      path: cluster_id
      transform:
        # Look only at the last time step
        - .isel: [!dag_prev , {time: -1}]
        # Count unique cluster IDs, i.e.: the cluster sizes
        - count_unique

  transform:
    # We are interested in the log-scaled cluster sizes
    - log10: !dag_tag cluster_size
      tag: data

  # Set scales, limits, and title
  helpers:
    set_title:
      title: Cluster Size Distribution
    set_labels:
      x: $\log_{10}(A)$
      y: $N_A$
    set_scales:
      y: log
    set_limits:
      x: [0, max]
      y: [0.7, ~]

  # Configure the histogram
  bins: 30
  # ... further arguments here are passed to np.histogram (via matplotlib)


# An animation of the cluster size distribution over time
cluster_size_distribution_animated:
  based_on:
    - .animation.ffmpeg
    - cluster_size_distribution

  select:
    log10_cluster_size:
      path: cluster_id
      transform:
        - .data
        - count_unique: [!dag_prev , [x, y]]

  frames: time

  helpers:
    set_title:
      title: " "  # to not create an overlap with the time shown in the title


# -- Complementary Cumulative Cluster Size Distribution -----------------------
# ... for individual universes
compl_cum_cluster_size_dist.universe:
  based_on:
    - .creator.universe
    - .plot.facet_grid.line

  select:
    cluster_size:
      <<: *select_cluster_size

  transform:
    # Use a custom operation to compute the complementary cluster size
    # distribution. Repeated counts need to be masked because (in a cumulative
    # distribution) they represent bins with zero counts; masking these makes
    # the plot visually simpler ...
    - complementary_cumulative_distribution: !dag_tag cluster_size
      kwargs:
        mask_repeated: true
      tag: data

  helpers: &compl_cum_helpers
    set_title:
      title: &compl_cum_title Compl. Cum. Cluster Size Distribution
    set_labels:
      x: Cluster Size $[A]$
      y: $N_A$
    set_scales:
      x: log
      y: log

  linestyle: "None"
  marker: "."


# ... more generically: for sweeps
compl_cum_cluster_size_dist.multiverse:
  based_on:
    - .creator.multiverse
    - .skip.if_more_than_4D
    - .plot.facet_grid.with_auto_encoding
    - .plot.facet_grid.line

  select_and_combine:
    fields:
      data:
        path: cluster_id
        transform:
          # Look only at the last time step
          - .isel: [!dag_prev , {time: -1}]
          # Count unique cluster IDs, i.e.: the cluster sizes
          - count_unique
          # Compute the distribution
          - complementary_cumulative_distribution: !dag_prev
            kwargs:
              mask_repeated: true
          - .rename: [!dag_prev , {bin_pos: "cluster size"}]

  x: cluster size

  helpers:
    <<: *compl_cum_helpers
    set_title:
      enabled: false
    set_suptitle:
      title: *compl_cum_title

  linestyle: "None"
  marker: "."


# -- Tree density plots -------------------------------------------------------
# ... Time series for each universe ...........................................
tree_density:
  based_on:
    - .creator.universe
    - .plot.facet_grid.line
    - .hlpr.kind.time_series

  select:
    data: tree_density

  helpers:
    set_title:
      title: Tree Density
    set_labels:
      x: Time [Steps]
      y: &label_tree_density Tree Density $[1/A]$
    set_limits:
      x: [0., max]
      y: [0., 1.]

  # Passed on to plt.plot
  # ...


# .. Facet grid ...............................................................
tree_density_facet_grid:
  based_on:
    - .creator.multiverse
    - .plot.facet_grid.with_auto_encoding
    - .plot.facet_grid.line
    - .hlpr.kind.time_series

  expected_multiverse_ndim: [1, 2, 3]  # only use for multiverse plots

  select_and_combine:
    fields:
      data: tree_density

  auto_encoding: true
  kind: line
  x: time

  helpers:
    set_labels:
      y: *label_tree_density
      only_label_outer: true
    set_limits:
      y: [0., 1.]



# ... Asymptotic tree density .................................................
tree_density_asymptotic:
  based_on:
    - .creator.multiverse
    - .plot.facet_grid.errorbars

  expected_multiverse_ndim: [1, 2, 3, 4]

  dag_options:
    define:
      # The fraction of the time series at which to start the averaging
      averaging_start_fraction: 0.95

  select_and_combine:
    fields:
      tree_density:
        path: tree_density
        transform:
          - .isel_range_fraction:
              - !dag_prev
              - {time: [!dag_tag averaging_start_fraction, 1.0]}
          - .mean: [!dag_prev , [time]]

  transform:
    - .mean: [!dag_tag tree_density, [seed]]
      allow_failure: true  # TODO Make this an errorbar plot!!
      tag: mean_tree_density
      fallback: !dag_tag tree_density

    - xr.full_like: [!dag_tag mean_tree_density, .nan]
      tag: all_nan

    - .std: [!dag_tag tree_density, [seed]]
      allow_failure: true
      fallback: !dag_tag all_nan
      tag: std_tree_density

    - xr.Dataset:
      - mean_tree_density: !dag_tag mean_tree_density
        std_tree_density: !dag_tag std_tree_density
      tag: data

  y: mean_tree_density
  yerr: std_tree_density
  # FIXME This should be x and xerr, but errorbars does not support it

  # need to adjust auto-encoding to have tree density on the (free) x axis
  auto_encoding:
    line: [y, hue, col, row, frames]

  helpers:
    set_suptitle:
      title: Asymptotic Tree Density
    set_labels:
      # x: Tree Density $[1/A]$
      y: Tree Density $[1/A]$
    set_limits:
      # x: [0., ~]
      y: [0., ~]

  linestyle: "None"
  marker: "."


tree_density_asymptotic_over_p_lightning:
  based_on: tree_density_asymptotic

  x: p_lightning

  helpers:
    set_labels:
      x: Lightning Probability
    set_scales:
      x: log


# -- Tree age -----------------------------------------------------------------
mean_tree_age:
  based_on:
    - .creator.multiverse
    - .skip.if_more_than_3D
    - .plot.facet_grid.with_auto_encoding
    - .plot.facet_grid.errorbands
    - .hlpr.kind.time_series

  select_and_combine:
    fields:
      age_mean:
        path: age
        transform:
          - where: [!dag_prev , ">", 0]  # removes cells that are no trees
          - .mean: [!dag_prev , [x, y]]
      age_std:
        path: age
        transform:
          - where: [!dag_prev , ">", 0]
          - .std: [!dag_prev , [x, y]]

  transform:
    - xr.Dataset:
        - age mean: !dag_tag age_mean
          age std: !dag_tag age_std
      tag: data

  x: time
  y: age mean
  yerr: age std

  helpers:
    set_suptitle:
      title: Mean Tree Age
    set_labels:
      x: Time [Steps]
      y: Mean Age [Steps]
      only_label_outer: true
    set_limits:
      y: [0., ~]


  # Passed on to facet grid errorbar plot
  # ...



# -- CA plots -----------------------------------------------------------------
# These are animated by default but can be assembled into snapshots by
# additionally inheriting the `.plot.ca.snapshot` configuration.
# ... The forest ..............................................................
ca/forest:
  based_on:
    - .creator.universe
    - .plot.ca

  select:
    kind: kind

  to_plot:
    kind:
      title: Forest State
      cmap:
        empty: darkkhaki
        tree: forestgreen
        ' ': none  # not used in FFM
        source: orange
        stone: slategrey

# ... The forest age ..........................................................
ca/forest_age:
  based_on:
    - .creator.universe
    - .plot.ca

  select:
    age: age

  to_plot:
    age:
      title: Forest Age
      cmap: YlGn
      vmin: 0
      vmax: max

# ... The clusters ............................................................
ca/clusters:
  based_on:
    - .creator.universe
    - .plot.ca

  select:
    cluster_id:
      path: cluster_id
      with_previous_result: true
      transform:
        - where: ["!=", 0]       # 0 is masked: not part of a cluster
        - np.fmod: 20            # ... to match the tab20 color map

  to_plot:
    cluster_id:
      title: Clusters
      cmap: tab20
      vmin: 0
      vmax: 20
      no_cbar_markings: true
