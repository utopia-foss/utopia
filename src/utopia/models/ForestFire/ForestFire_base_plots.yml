# Default base plots for the ForestFire model
---
# --- A plot of the cluster size distribution ---------------------------------
cluster_size_distribution:  # FIXME Migrate plot
  based_on: .distribution.histogram

  # Specify which data to calculate the histogram of
  model_name: ForestFire
  path_to_data: cluster_id

  # Set scales, limits, and title
  helpers:
    set_title:
      title: Cluster Size Distribution
    set_labels:
      x: $\log_{10}(A)$
      y: $N_A$
    set_scales:
      y: log
    set_limits:
      x: [0, max]
      y: [0.8, ~]

  # Perform dimensionality reduction of the given data
  preprocess:
    # This is a sequence of operations to carry out. Each entry is either the
    # name of an operation (if there are no arguments needed for the
    # operation) or a dict where the only key refers to the name of the
    # operation and the content of the dict is passed to that function

    # First, Select the last index along the time dimension
    - isel:
        time: -1
    # Then, count unique cluster IDs, i.e.: the cluster sizes
    - count_unique
    # Now apply a base-10 logarithm; histogram makes no sense otherwise
    - log10

  # Configure the histogram
  histogram_kwargs:
    bins: 30
    range: [0, ~]  # None is resolved to data.min() or data.max()

  # Arguments passed to plt.bar
  # ...

# --- Complementary Cumulative Cluster Size Distribution ----------------------
compl_cum_cluster_size_dist:  # FIXME Migrate plot
  based_on: .distribution.histogram.complementary_cumulative

  # Specify which data to calculate the histogram of
  model_name: ForestFire
  path_to_data: cluster_id

  # Set scales, limits, and title
  helpers:
    set_title:
      title: Compl. Cum. Cluster Size Distribution
    set_labels:
      x: Cluster Size $[A]$
      y: $N_A$
    set_scales:
      x: log
      y: log

  # Configure dimensionality reduction of the given data
  preprocess:
    # First, Select the last index along the time dimension
    - isel:
        time: -1
    # Then, count unique cluster IDs, i.e.: the cluster sizes
    - count_unique

  # Adjust postprocessing to not normalize
  postprocess:
    - cumulate_complementary


# --- Tree age plots ----------------------------------------------------------
mean_tree_age:   # FIXME Migrate plot
  based_on: .basic_uni.errorbar

  model_name: ForestFire

  to_plot:
    age:
      label: Tree Age
      plot_std: true
      transform_data:
        - where: ['>', 0]
        - mean: [x, y]
      transform_std:
        - where: ['>', 0]
        - std: [x, y]

  helpers:
    set_title:
      title: Mean Tree Age
    set_labels:
      x: Time [Iteration Steps]
      y: Mean Age [Iteration Steps]
    set_limits:
      x: [0., max]

  # Passed on to errorbar plot
  # ...


# --- Tree density plots ------------------------------------------------------
# ... Time series for each universe ...........................................
tree_density:
  based_on: .basic_uni.lineplot

  model_name: ForestFire
  path_to_data: tree_density

  helpers:
    set_title:
      title: Tree Density
    set_labels:
      x: Time [Iteration Steps]
      y: Tree Density $[1/A]$
    set_limits:
      x: [0., max]
      y: [0., 1.]

  # Passed on to plt.plot
  # ...

# ... For a parameter sweep over seed and p_lightning .........................
tree_density_over_p_lightning:
  based_on: .basic_mv.errorbar
  expected_multiverse_ndim: [1, 2, 3]
  select:
    field: data/ForestFire/tree_density

  # Specify which data to plot and which data to use for std
  to_plot: tree_density
  plot_std: true

  # Apply some transformations, e.g. calculate a mean over the seed
  transform_data:
    - mean: [seed]
      _may_fail: true

  # Same transformations needed for std
  transform_std:
    - std: [seed]
      _may_fail: true

  # Specify over which sweep to create lines
  lines_from: p_lightning

  # Adjust helpers
  helpers:
    set_title:
      title: Tree Density
    set_labels:
      x: Time [Iteration Steps]
      y: Tree Density $[1/A]$
    set_limits:
      x: [0., max]
      y: [0., 1.]
    set_legend:
      loc: upper left

  # Use a custom color map for lines
  cmap: viridis

  # Passed on to errorbar plot
  # ...


# ... Asymptotic tree density .................................................
tree_density_asymptotic:
  based_on: .basic_mv.asymptotic_average

  select:
    fields:
      data: data/ForestFire/tree_density

  # Make this a time-averaged tree density
  average_dim: time
  average_fraction: .01

  # Average over seed, if available
  transform_data:
    - mean: [seed]
      _may_fail: true

  # Don't plot std
  plot_std: false

  # Adjust helpers
  helpers:
    set_title:
      title: Asymptotic Tree Density
    set_labels:
      x: Tree Density $[1/A]$
    set_limits:
      x: [0., ~]


# --- Grid Snapshots ----------------------------------------------------------
# NOTE These can also be used as basis for grid animations.
# ... The forest ..............................................................
forest_snapshot:
  based_on: .ca.state
  model_name: ForestFire

  to_plot:
    kind:
      title: Forest State
      limits: [0, 4]
      cmap:
        empty: darkkhaki
        tree: forestgreen
        ' ': none  # not used in FFM
        source: orange
        stone: slategrey

# ... The forest age ..........................................................
forest_age_snapshot:
  based_on: .ca.state
  model_name: ForestFire

  to_plot:
    age:
      title: Forest Age
      cmap: YlGn

# ... The clusters ............................................................
clusters_snapshot:  # FIXME Migrate plot
  based_on: .ca.state
  model_name: ForestFire

  to_plot:
    cluster_id:
      title: Clusters
      limits: [0, 20]
      cmap: tab20
      no_cbar_markings: true

  transform_data:
    cluster_id:
      - where: ['!=', 0]       # 0 is masked: not part of a cluster
      - mod: 20                # ... to match the tab20 color map


# --- Generic Multidimensional Plotting ---------------------------------------
# ... Facet Grid Plot .........................................................
tree_density_facet_grid:
  based_on: .dag.generic.facet_grid
  expected_multiverse_ndim: [1, 2, 3]
  creator: multiverse

  select_and_combine:
    fields:
      data: tree_density
    base_path: data/ForestFire
