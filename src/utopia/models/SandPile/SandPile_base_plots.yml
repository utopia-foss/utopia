# Base configurations for SandPile model plots
---
# --- A plot of the slope (mean - critical_slope) -----------------------------
mean_slope:
  based_on: .default_style_and_helpers

  creator: universe
  universes: all
  
  # Use the SandPile-specific plot functions
  module: model_plots.SandPile
  plot_func: mean_slope

  # Select that the critical slope value should be added to the plot
  show_critical_slope_value: true

  # Add a title
  helpers:
    set_title:
      title: Mean Slope

  # Arguments passed to plt.plot
  linestyle: 'None'
  marker: '.'


# --- Plot the avalanche area fraction time series ----------------------------
area_fraction:  # FIXME Migrate plot
  based_on: .time_series.density

  # Adjust helpers
  helpers:
    set_labels:
      y: Rel. Area $[1/A]$
    set_scales:
      y: log
    set_limits:
      y: [1.e-5, 1.]
    set_title:
      title: Avalanche Size Area Fraction

  # Specify which data to use
  model_name: SandPile
  path_to_data: avalanche
  
  # Select states from which to calculate the density; result is binary mask
  preprocess:
    - create_mask: [==, 1]
  
  mean_of: [x, y]

  # And that the avalanche sizes are to be used as dot sizes. The sizes are
  # normalized by dividing through the maximum size, which allows scaling the
  # scatter dots via the `size_factor` argument
  sizes_from: avalanche_size
  size_factor: 42.

  # Arguments passed on to plt.scatter ...
  # Adjust such that they don't have an edge
  marker: 'o'
  alpha: .9


# --- A plot of the cluster size distribution ---------------------------------
cluster_size_distribution:  # FIXME Migrate plot
  based_on: .distribution.histogram

  # Specify which data to calculate the histogram of
  model_name: SandPile
  path_to_data: avalanche_size

  # Set scales, limits, and title
  helpers:
    set_title:
      title: Cluster Size Distribution
    set_labels:
      x: $\log_{10}(A)$
      y: $N_A$
    set_scales:
      y: log
    set_limits:
      x: [0, max]
      y: [0.8, ~]

  # Preprocess the histogram
  preprocess:
  # Apply a base-10 logarithm; histogram makes no sense otherwise
    - log10

  # Configure the histogram
  histogram_kwargs:
    bins: 25
    range: [0, ~]  # None is resolved to data.min() or data.max()

  # Arguments passed to plt.bar
  # ...


# --- A plot of the complementary cumulative probability distribution ---------
compl_cum_prob_dist:  # FIXME Migrate plot
  based_on: .distribution.histogram.complementary_cumulative

  # Specify basic configuration for this model
  model_name: SandPile
  path_to_data: avalanche_size

  helpers:
    set_title:
      title: Compl. Cum. Prob. Distr. of Avalanche Sizes
    set_scales:
      x: log
      y: log
    set_labels:
      x: Cluster Size $[A]$
      y: $P_A(A)$
    set_limits:
      x: [0.8, ~]

  # Arguments passed to plt.plot
  # ...
