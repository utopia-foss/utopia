# Base configurations for SandPile model plots
---
.variables:
  base_path: &base_path  data/SandPile

# -- Overloads ----------------------------------------------------------------
# Overload some configs to insert SandPile-specific settings

.creator.universe:
  based_on: .creator.universe

  dag_options:
    select_path_prefix: *base_path

.creator.multiverse:
  based_on: .creator.multiverse

  select_and_combine:
    base_path: *base_path



# =============================================================================
# == PLOTS ====================================================================
# =============================================================================

# --- A plot of the slope (mean - critical_slope) -----------------------------
mean_slope:
  based_on: .default_style_and_helpers

  creator: universe
  universes: all

  # Use the SandPile-specific plot functions
  module: model_plots.SandPile
  plot_func: mean_slope

  # Select that the critical slope value should be added to the plot
  show_critical_slope_value: true

  # Add a title
  helpers:
    set_title:
      title: Mean Slope

  # Arguments passed to plt.plot
  linestyle: 'None'
  marker: '.'


# --- Avalanche area fraction time series -------------------------------------
area_fraction:
  based_on:
    - .creator.universe
    - .plot.facet_grid.scatter
    - .hlpr.kind.time_series

  select:
    avalanche_size:
      path: avalanche_size
      transform:
        - .data
    num_cells:
      path: avalanche_size
      transform:
        - .attrs: [!dag_prev , num_cells]

  transform:
    - div: [!dag_tag avalanche_size, !dag_tag num_cells]
      tag: area_fraction

    # Compute the marker sizes such that larger area fractions are larger
    - mul: [!dag_tag area_fraction, 100]
    - add: [!dag_prev , 2]
      tag: sizes

    # Combine into a dataset
    - xr.Dataset:
      - area_fraction: !dag_tag area_fraction
        sizes: !dag_tag sizes
      tag: data

  x: time
  y: area_fraction
  s: !dag_result sizes

  # Arguments passed on to plt.scatter ...
  # Need to adjust scatter points such that they don't have an edge
  marker: '.'
  alpha: .8
  edgecolors: none
  linewidths: 0.

  # Adjust helpers
  helpers:
    set_labels:
      y: Rel. Area $[1/A]$
    set_limits:
      y: [0., 1.]
    set_title:
      title: Avalanche Size Area Fraction



# -- Cluster size distribution ------------------------------------------------
cluster_size_distribution:
  based_on:
    - .creator.universe
    - .plot.facet_grid.hist  # wraps xarray.plot.hist

  # Specify which data to calculate the histogram of
  select:
    avalanche_size: avalanche_size

  transform:
    # We are interested in the log-scaled avalanche sizes
    - log10: !dag_tag avalanche_size
      tag: data

    # Generate a title which includes the number of avalanches
    - len: !dag_tag data
    - .format:
        - "Cluster Size Distribution ($N={}$)"
        - !dag_prev
      tag: title_str

  # Set scales, limits, and title
  helpers:
    set_title:
      title: !dag_result title_str
    set_labels:
      x: $\log_{10}(A)$
      y: $N_A$
    set_scales:
      y: log
    set_limits:
      x: [0, max]
      y: [0.7, ~]

  # Configure the histogram
  bins: 36
  range: [0, 6]
  # ... further arguments here are passed to np.histogram (via matplotlib)




# -- Complementary Cumulative Cluster Size Distribution -----------------------
# ... for individual universes
compl_cum_cluster_size_dist.universe:
  based_on:
    - .creator.universe
    - .plot.facet_grid.line

  select:
    cluster_size: avalanche_size

  transform:
    # Use a custom operation to compute the complementary cluster size
    # distribution. Repeated counts need to be masked because (in a cumulative
    # distribution) they represent bins with zero counts; masking these makes
    # the plot visually simpler ...
    - complementary_cumulative_distribution: !dag_tag cluster_size
      kwargs:
        mask_repeated: true
      tag: data

  helpers: &compl_cum_helpers
    set_title:
      title: &compl_cum_title Compl. Cum. Cluster Size Distribution
    set_labels:
      x: Cluster Size $[A]$
      y: $N_A$
    set_scales:
      x: log
      y: log

  linestyle: "None"
  marker: "."


# ... more generically: for sweeps
compl_cum_cluster_size_dist.multiverse:
  based_on:
    - .creator.multiverse
    - .skip.if_more_than_4D
    - .plot.facet_grid.with_auto_encoding
    - .plot.facet_grid.line

  select_and_combine:
    fields:
      data:
        path: avalanche_size
        transform:
          - complementary_cumulative_distribution: !dag_prev
            kwargs:
              mask_repeated: true
          - .rename: [!dag_prev , {bin_pos: "cluster size"}]

  x: cluster size

  helpers:
    <<: *compl_cum_helpers
    set_title:
      enabled: false
    set_suptitle:
      title: *compl_cum_title

  linestyle: "None"
  marker: "."


# -- CA Plots -----------------------------------------------------------------

ca/slope:
  based_on:
    - .creator.universe
    - .plot.ca

  select:
    slope: slope

  to_plot:
    slope:
      title: Slope
      cmap: copper

ca/avalanche:
  based_on:
    - .creator.universe
    - .plot.ca

  select:
    avalanche: avalanche

  to_plot:
    avalanche:
      title: Avalanche
      limits: [0, 1]
      cmap:
        static: black
        mobile: orange

ca/slope_and_avalanche:
  based_on:
    - ca/slope
    - ca/avalanche
