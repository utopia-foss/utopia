# Plots for the utopia plotting docs
---
_utopia_colors:
  dark_blue:          &darkblue           '#003366'
  medium_blue:        &mediumblue         '#0099CC'
  light_blue:         &lightblue          '#99CCFF'
  dark_green:         &darkgreen          '#006666'
  medium_green:       &mediumgreen        '#339999'
  light_green:        &lightgreen         '#AFD8BC'
  yellow:             &yellow             '#FFCC66'
  red:                &red                '#CC3333'
  cream_white:        &creamwhite         '#F6F6F6'
  white:              &white              '#fff'
  black:              &black              '#000000'
  gray:               &gray               '#F7F9FF'
  dark_gray:          &darkgray           '#666666'

_default_style: &default_style
  style:
    text.usetex: True
    mathtext.fontset: stix
    font.family: serif

# -----------------------------------------------------------------------------

.flush_kind:
  to_plot:
    kind:
      cmap: ~

.flush_helper:
  helpers: ~

# -----------------------------------------------------------------------------
# Demonstrates a line plot with errorbars
### Start --- errorbars
errorbars:
  based_on:
    - .creator.multiverse
    - .plot.facet_grid.errorbars

  # Select only the 'infected' kind of agents
  select_and_combine:
    fields:
      infected:
        path: densities
        transform:
          - .sel: [!dag_prev , { kind: infected }]

    # Select a subspace of the sweep parameters that was performed here
    # (not needed if you are only sweeping over 'seed'. See the 'subspace' page
    # for details).
    subspace:
      transmission rate: [0.6]
      immunity rate: [0]

  # Get time coordinates, and calculate mean and std
  transform:
    - .coords: [!dag_tag infected, time]
      tag: time
    - .mean: [!dag_tag infected, [seed]]
      tag: infected_mean
    - .std: [!dag_tag infected, [seed]]
      tag: infected_std

    - xr.Dataset:
      - avg: !dag_tag infected_mean
        err: !dag_tag infected_std
      tag: data  # Don't forget to define the 'data' tag

  # Distribute the data dimensions
  x: time
  y: avg
  yerr: err

  # These kwargs are passed to matplotlib.pyplot.errorbar
  capsize: 2
  color: '#CC3333'
  elinewidth: 0.5

  # Set the helpers
  helpers:
    set_labels:
      x: Time [steps]
      y: Density [1/A]
    set_title:
      title: Density of infected agents
### End --- errorbars
  <<: *default_style

# Demonstrates a line plot with errorbands
errorbands:
  based_on:
    - errorbars
    - .plot.facet_grid.errorbands

# Demonstrates a stacked line plot
stacked_transmission:
  based_on:
    - .creator.multiverse
    - .plot.facet_grid.line

  select_and_combine:
    fields:
      data:
        path: densities
        transform:
          - .sel: [!dag_prev , { kind: infected }]
    subspace:
      immunity rate: [0.3]
      seed: [0]

  x: time
  hue: transmission rate

  style:
    axes.prop_cycle: cycler('color', ['#AFD8BC', '#FFCC66', '#006666' ])
  helpers:
    set_labels:
      y: Density [1/A]
    set_title:
      title: Density of infected agents

# Demonstrates a stacked averaged line plot
stacked_transmission_averaged:
  based_on:
    - .creator.multiverse
    - .plot.facet_grid.line
    - _default_style

  select_and_combine:
    fields:
      infected:
        path: densities
        transform:
          - .sel: [!dag_prev , { kind: infected }]
    subspace:
      immunity rate: [ 0.3 ]

  transform:
    - .mean: [!dag_tag infected, [seed]]
      tag: data

  x: time
  hue: transmission rate

  style:
    axes.prop_cycle: cycler('color', ['#AFD8BC', '#FFCC66', '#006666' ])
  helpers:
    set_labels:
      y: Density [1/A]
    set_title:
      title: Density of agent kinds

# Demonstrates a stacked line plot with errorbands
### Start --- stacked_errorbands
stacked_errorbands:
  based_on:
    - .creator.multiverse
    - .plot.facet_grid.errorbands

  # Select the infected population
  select_and_combine:
    fields:
      infected:
        path: densities
        transform:
          - .sel: [!dag_prev , { kind: infected }]
    subspace:
      immunity rate: [ 0.3 ]

  # Calculate mean and std for each 'transmission rate' value
  transform:
    - .mean: [!dag_tag infected]
      kwargs:
        dim: seed
      tag: mean
    - .std: [!dag_tag infected]
      kwargs:
        dim: seed
      tag: std
    - xr.Dataset:
      - infected density: !dag_tag mean
        err: !dag_tag std
      tag: data

  # Distribute the variables accordingly
  x: time
  y: infected density
  yerr: err
  hue: transmission rate

  # Set the helpers
  helpers:
    set_labels:
      y: Density [1/A]
    set_title:
      title: Density of agent kinds

  # Use some pretty colors and latex
  style:
    text.usetex: True
    mathtext.fontset: stix
    font.family: serif
    axes.prop_cycle: cycler('color', ['#AFD8BC', '#FFCC66', '#006666' ])
### End --- stacked_errorbands

# Demonstrates a facet grid plot errorbands
### Start --- facet_grid
panel_errorbands:
  based_on:
    - .creator.multiverse
    - .plot.facet_grid.errorbands

  # Select the infected agents
  # (three sweep dimensions: immunity rate, transmission rate, seed)
  select_and_combine:
    fields:
      infected:
        path: densities
        transform:
          - .sel: [!dag_prev , { kind: infected }]

  # Calculate mean and std for each
  transform:
    - .mean: [!dag_tag infected, seed]
      tag: mean
    - .std: [!dag_tag infected, seed]
      tag: std
    - xr.Dataset:
      - infected density: !dag_tag mean
        err: !dag_tag std
      tag: data

  # Distribute the variables
  x: time
  y: infected density
  yerr: err
  row: transmission rate
  col: immunity rate

  # Set the same limits for all (makes it easier to compare the panels)
  helpers:
    set_limits:
      y: [ 0, 0.2 ]

  # Use some pretty colors and latex
  color: '#CC3333'
  style:
    text.usetex: True
    mathtext.fontset: stix
    font.family: serif
### End --- facet_grid

# Demonstrates a facet grid of stacked line plots with errorbands
panel_all:
  based_on:
    - panel_errorbands
    - .flush_helper

  select_and_combine:
    fields:
      infected:
        path: densities
        transform:
          - .sel: [!dag_prev , { kind: [susceptible, infected, recovered] }]

  hue: kind

  color: ~
  style:
    axes.prop_cycle: cycler('color', ['#CC3333', '#006666', '#AFD8BC' ])
    savefig.transparent: true
  helpers:
    set_limits:
      y: [ 0, 0.6 ]

# Demonstrates subspace selection
panel_subspace:
  based_on: panel_all

  select_and_combine:
    subspace:
      transmission rate: [ 0.2 ]
      immunity rate: [ 0, 0.1, 0.2 ]

  row: ~

  style:
    axes.prop_cycle: cycler('color', ['#CC3333', '#006666', '#AFD8BC' ])
  helpers:
    set_limits:
      y: [ 0, 0.6 ]

# Demonstrates a histogram plot
### Start --- histogram
histogram:
  based_on:
    - .creator.multiverse
    - .plot.facet_grid.hist

  # Select only the infected population
  select_and_combine:
    fields:
      infected:
        path: densities
        transform:
          - .sel: [!dag_prev , { kind: infected }]

  # Get the maximum value
  transform:
    - np.max: [!dag_tag infected]
      kwargs:
        axis: 3
      tag: data

  # Helpers
  helpers:
    set_title:
      title: Maximum density of infected agents
    set_labels:
      x: Peak height
      y: ' '
### End --- histogram
  color: *mediumgreen
  bins: 50

  style:
    text.usetex: True
    mathtext.fontset: stix
    font.family: serif

### Start --- double_histogram
double_histogram:
  based_on:
    - .creator.multiverse
    - .plot.multiplot

  # Select the infected and susceptible populations
  select_and_combine:
    fields:
      infected:
        path: densities
        transform:
          - .sel: [ !dag_prev , { kind: infected } ]
      susceptible:
        path: densities
        transform:
          - .sel: [!dag_prev , {kind: susceptible} ]

  # Get the maximum value for the infected and the minimum for the suscpetible population
  transform:
    - np.max: [ !dag_tag infected ]
      kwargs:
        axis: 3
    - .values: [!dag_prev ]
    - .flatten: [!dag_prev ]
      tag: data_infected
    - np.min: [!dag_tag susceptible ]
      kwargs:
        axis: 3
    - .values: [ !dag_prev ]
    - .flatten: [ !dag_prev ]
      tag: data_susceptible

  bins: 50
  color: '#006666'

  # Use seaborn.histplot with kde to show densities
  to_plot:
    [0, 0]:
      - function: sns.histplot
        args:
          - !dag_result data_infected
        kde: true
    [0, 1]:
      - function: sns.histplot
        args:
          - !dag_result data_susceptible
        kde: true

  helpers:
    setup_figure:
      nrows: 2
      sharex: true
### End --- double_histogram

# Demonstrates a facet grid 2d scatter plot
### Start --- scatter_2d_facet
scatter_2d_facet:
  based_on:
    - .creator.multiverse
    - .plot.facet_grid.scatter

  # Subspace selection only necessary when a sweep was performed over
  # more dimensions than you wish to plot: see the 'subspaces'
  # article for details.
  select_and_combine:
    fields:
      kind:
        path: densities
    subspace:
      immunity rate: [0.1, 0.2]
      seed: [0]

  # Bundle kinds into a single dataset
  transform:
    - .sel: [!dag_tag kind, { kind: susceptible }]
      kwargs: { drop: true }
      tag: susceptible
    - .sel: [!dag_tag kind, { kind: infected }]
      kwargs: { drop: true }
      tag: infected

    - xr.Dataset:
      - susceptible: !dag_tag susceptible
        infected: !dag_tag infected
      tag: data

  # Distribute the variables
  x: susceptible
  y: infected
  row: immunity rate
  col: transmission rate
  hue: time

  # Define a colormap from some pretty colors (optional)
  # It is recommended to use YAML anchors to globally define
  # colors across plots: see the 'Customising plot styles' page
  # for details.
  cmap:
    continuous: true
    from_values:
      0: '#FFCC66'
      1: '#0099CC'
### End --- scatter_2d_facet
  <<: *default_style

# Demonstrates a facet grid 3d scatter plot
scatter_3d:
  based_on:
    - scatter_2d_facet
    - .plot.facet_grid.scatter3d

  select_and_combine:
    subspace:
      transmission rate: [0.2, 0.4]
      immunity rate: [0.2]
      seed: [4]

  transform:
    - .sel: [!dag_tag kind, { kind: susceptible }]
      kwargs: { drop: true }
      tag: susceptible
    - .sel: [!dag_tag kind, { kind: infected }]
      kwargs: { drop: true }
      tag: infected
    - .sel: [!dag_tag kind, { kind: recovered }]
      kwargs: { drop: true }
      tag: recovered

    - xr.Dataset:
      - susceptible: !dag_tag susceptible
        infected: !dag_tag infected
        recovered: !dag_tag infected
      tag: data

  z: recovered
  col: transmission rate
  row: ~

  figsize: [8, 4]

  helpers:
    subplots_adjust:
      right: 0.75
    set_tick_formatters:
      x: &tick_format
        major:
          name: StrMethodFormatter
          args: ['{x: 0.1f}']
      z:
        <<: *tick_format

    set_ticks:
      y:
        major: [0, 0.05, 0.1]

single_kdeplot:

  based_on:
    - .creator.multiverse
    - .plot.multiplot

  select_and_combine:
    fields:
      infected:
        path: densities
        transform:
          - .sel: [ !dag_prev , { kind: infected } ]
    subspace:
      immunity rate: [ 0.2 ]

  transform:
    - .sel: [ !dag_tag infected, { transmission rate: 0.4 } ]
    - np.max: [ !dag_prev , 2 ]
    - .squeeze: [ !dag_prev ]
      tag: data_low
    - .sel: [ !dag_tag infected, { transmission rate: 0.6 } ]
    - np.max: [ !dag_prev , 2 ]
    - .squeeze: [ !dag_prev ]
      tag: data_high
  to_plot:
    - function: sns.kdeplot
      data: !dag_result data_low
      label: $p_\mathrm{transmit}=0.4$
      linestyle: dashed
      color: *red
    - function: sns.kdeplot
      data: !dag_result data_high
      label: $p_\mathrm{transmit}=0.6$
      color: *yellow
  compute_only: [ ]
  style:
    text.usetex: True
    mathtext.fontset: stix
    font.family: serif
    figure.figsize: [4, 4]
  helpers:
    set_legend:
      use_legend: True
    set_labels:
      x: Infection peak
      y: ' '

double_kdeplot:
  based_on: single_kdeplot
  to_plot:
    [0, 0]:
      - function: sns.kdeplot
        data: !dag_result data_low
        label: $p_\mathrm{transmit}=0.4$
        fill: true
    [1, 0]:
      - function: sns.kdeplot
        data: !dag_result data_high
        label: $p_\mathrm{transmit}=0.6$
        fill: true
  color: *darkblue
  helpers:
    setup_figure:
      ncols: 2
      sharey: true
    set_limits:
      x: [0.06, 0.2]
  style:
    figure.figsize: [8, 4]

# Demonstrates a scatterplot and an errorbar plot on a single axis using multiplot
### Start --- multiplot
multiplot:
  based_on:
    - .creator.multiverse
    - .plot.multiplot
  select_and_combine:
    fields:
      susceptible:
        path: densities
        transform:
          - .sel: [!dag_prev , {kind: susceptible}]
            kwargs:
              drop: true
      infected:
        path: densities
        transform:
          - .sel: [!dag_prev , {kind: infected}]
            kwargs:
              drop: true
      recovered:
        path: densities
        transform:
          - .sel: [!dag_prev , {kind: recovered}]
            kwargs:
              drop: true
    subspace:
      immunity rate: 0.1
      transmission rate: 0.2

  compute_only: [ ]
  transform:
    - .coords: [!dag_tag infected, time]
      tag: time
    - .mean: [!dag_tag susceptible, seed]
    - .squeeze: [!dag_prev ]
      tag: mean_s
    - .std: [!dag_tag susceptible, seed]
    - .squeeze: [!dag_prev ]
      tag: std_s
    - .mean: [!dag_tag infected, seed]
      tag: mean_i
    - .mean: [!dag_tag recovered, seed]
      tag: mean_r
    - xr.Dataset:
      - infected: !dag_tag mean_i
        recovered: !dag_tag mean_r
      tag: scatter_data

  to_plot:
    - function: plt.errorbar
      x: !dag_result time
      y: !dag_result mean_s
      yerr: !dag_result std_s
      label: Susceptible agents
      color: '#0099CC'
    - function: [xarray.plot, scatter]
      args:
        - !dag_result scatter_data
      x: time
      y: recovered
      hue: infected
      cmap:
        continuous: true
        from_values:
          0: '#006666'
          1: '#CC3333'
      label: Recovered agents
      zorder: 3

  helpers:
    set_labels:
      y: Agent density
    set_legend:
      use_legend: True
      loc: 'best'
      fontsize: 11
### End --- multiplot
  <<: *default_style
