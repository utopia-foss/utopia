# Output for the demo scenario
---

_utopia_colors: &utopia_colors
  dark_blue:          &darkblue           '#003366'
  medium_blue:        &mediumblue         '#0099CC'
  light_blue:         &lightblue          '#99CCFF'
  dark_green:         &darkgreen          '#006666'
  medium_green:       &mediumgreen        '#339999'
  light_green:        &lightgreen         '#AFD8BC'
  yellow:             &yellow             '#FFCC66'
  red:                &red                '#CC3333'
  cream_white:        &creamwhite         '#F6F6F6'
  white:              &white              '#fff'
  black:              &black              '#000000'
  gray:               &gray               '#F7F9FF'
  dark_gray:          &darkgray           '#666666'


# -----------------------------------------------------------------------------

# Demonstrates agents in a domain
### Start --- agents_in_domain
agents:
  based_on:
    - .creator.universe
    - .plot.abm
    - .animation.ffmpeg
    - .animation.fps30

  # Prepare data
  select:
    x:
      path: agent/x
      transform: [ .data ]
      allow_failure: silent
      fallback: !dag_tag _skip_plot
    y:
      path: agent/y
      transform: [ .data ]
    orientation:
      path: agent/orientation
      transform: [ .data ]

    space_extent:
      path: agent/x  # meta data is written to every other dataset as well
      transform:
        - getattr: [!dag_prev , attrs]
        - getitem: [!dag_prev , space_extent]

  transform:
    # Combine data into one dataset
    - xr.Dataset:
        - x: !dag_tag x
          y: !dag_tag y
          orientation: !dag_tag orientation
      tag: agents

  # Data encoding
  x: x
  y: y
  frames: time
  orientation: orientation
  hue: orientation

  # Define what to plot
  to_plot:
    agents:
      marker: wedge

  # Pass on space extent (used for setting limits)
  domain:
    extent: !dag_result space_extent
    pad: 0

  # Set tail lengths, style, and decay factor
  tail_length: 24
  tail_decay: 0.12
  tail_max_segment_length: 1.  # to avoid problems when crossing a boundary
  tail_kwargs:
    color: black
    linewidth: 0.5
    alpha: .6
    zorder: -10

  # Colorbar settings
  vmin: -3.14159
  vmax: +3.14159
  cbar_labels:
    +3.14159: $+π$
    +1.570795: $+π/2$
    0: $0$
    -1.570795: $+π/2$
    -3.14159: $-π$

### End --- agents_in_domain
  enabled: true

  universes:
    seed: [0]

  # Use a Utopia-themed colormap
  cmap: &cmap
    continuous: true
    from_values:
      0.0: *darkgreen
      0.333: *yellow
      0.666: *red
      1.0: *darkgreen
  frames_isel: !range [200]


fish_demo:
  based_on:
    - agents
    - .animation.disabled
  frames_isel: [10]
  to_plot:
    agents:
      marker: fish2

agents_in_domain_clean:
  enabled: false  # not needed in docs (but used on webpage)
  based_on:
    - agents_in_domain
    - .animation.fps30
    - .animation.very_high_dpi
    # - .animation.frames

    # Hide axes
    - .hlpr.ticks.x.hide
    - .hlpr.ticks.y.hide
    - .style.no_spines
    - .style.no_grid

  figsize_aspect_offset: 0
  suptitle_fstr: false
  add_colorbar: false
  add_legend: false

  style:
    axes.facecolor: *gray

  cmap:
    <<: *cmap

  universes:
    seed: [1, 2]

agents_in_domain_clean_frames:
  enabled: false
  based_on:
    - agents_in_domain_clean
    - .animation.frames

  marker: fish
